import { SendEmailCommand } from "@aws-sdk/client-ses";
import { sesClient } from "../libs/sesClient";

const createSendEmailCommand = (toAddress: string, fromAddress: string,score:any,subject:any) => {
  return new SendEmailCommand({
    Destination: {
      /* required */
      CcAddresses: [
        /* more items */
      ],
      ToAddresses: [
        toAddress,
        /* more To-email addresses */
      ],
    },
    Message: {
      /* required */
      Body: {
        /* required */
        Html: {
          Charset: "UTF-8",
          Data:    `
          <html>

<body>
<div style="padding:20px;">
<div style="max-width: 500px;">
<div>Dear researcher/ therapist</div>
<h2>My WISCI-SR score is ${score}</h2>
<p>
From<br></br>
${subject}
</p>
</div>
<br><br>
This email is automatically generated by www.WISCI.org, please do not reply to this email.
</div>
</body>
</html>

          
          `,
        },
        Text: {
          Charset: "UTF-8",
          Data:"",
        },
      },
      Subject: {
        Charset: "UTF-8",
        Data: `WISCI-SR Score-${subject}`,
      },
    },
    Source: fromAddress,
    ReplyToAddresses: [
      /* more items */
    ],
  });
};

const run_sendEmail = async (score:any,email:string,subject:string) => {
  const sendEmailCommand = createSendEmailCommand(
    email,
    "results@wisci.org",
    score,
    subject,
  );

  try {
    return await sesClient.send(sendEmailCommand);
  } catch (caught) {
    if (caught instanceof Error && caught.name === "MessageRejected") {
      /** @type { import('@aws-sdk/client-ses').MessageRejected} */
      const messageRejectedError = caught;
      return messageRejectedError;
    }
    else{
        return new Error
    }
    throw caught;
  }
};

// snippet-end:[ses.JavaScript.email.sendEmailV3]
export { run_sendEmail };